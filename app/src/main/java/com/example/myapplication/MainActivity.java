package com.example.myapplication;import androidx.appcompat.app.AppCompatActivity;import android.os.Bundle;import android.text.InputType;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.TextView;public class MainActivity extends AppCompatActivity {    String op = "";    TextView pending_number, result, op_textview;    View.OnClickListener neg_and_decimal;    EditText enter_number;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        enter_number = findViewById(R.id.down);        pending_number = findViewById(R.id.TextviewUp);        result = findViewById(R.id.result);        op_textview = findViewById(R.id.op);        Button button1 = findViewById(R.id.one);        Button button2 = findViewById(R.id.two);        Button button3 = findViewById(R.id.three);        Button button4 = findViewById(R.id.four);        Button button5 = findViewById(R.id.five);        Button button6 = findViewById(R.id.six);        Button button7 = findViewById(R.id.seven);        Button button8 = findViewById(R.id.eight);        Button button9 = findViewById(R.id.nine);        Button button0 = findViewById(R.id.zero);        Button sub = findViewById(R.id.sub);        Button add = findViewById(R.id.increes);        Button equal = findViewById(R.id.equal);        Button divide = findViewById(R.id.divide);        Button mult = findViewById(R.id.mutl);        Button clean = findViewById(R.id.clean);        Button delete = findViewById(R.id.remove);        Button decimal = findViewById(R.id.decimal);        Button NEG = findViewById(R.id.neg);        enter_number.setShowSoftInputOnFocus(false);        enter_number.setFocusable(false);        View.OnClickListener listener = v -> {            Button btn = (Button) v;            int id = v.getId();            if (v.getId() == R.id.remove) {                String text = enter_number.getText().toString();                if (text.length() > 0) {                    enter_number.setText(text.substring(0, text.length() - 1));                }            }else if (v.getId() == R.id.clean) {                clean_data();            } else {                enter_number.append(btn.getText().toString());            }        };        View.OnClickListener operation = v -> {            Button btn = (Button) v;            op = btn.getText().toString();            op_textview.setText(op);            pending_number.setText(enter_number.getText().toString());            enter_number.setText("");        };        if (pending_number != null && enter_number != null) {            equal.setOnClickListener(v -> {                double re;                switch (op) {                    case "-":                        re = Double.parseDouble(pending_number.getText().toString()) - Double.parseDouble(enter_number.getText().toString());                        runOnUiThread(new Runnable() {                            @Override                            public void run() {                                result.setText(re + "");                                clean_data();                            }                        });                        break;                    case "+":                        re = Double.parseDouble(pending_number.getText().toString()) + Double.parseDouble(enter_number.getText().toString());                        runOnUiThread(new Runnable() {                            @Override                            public void run() {                                result.setText(re + "");                                clean_data();                            }                        });                        break;                    case "X":                        re = Double.parseDouble(pending_number.getText().toString()) * Double.parseDouble(enter_number.getText().toString());                        runOnUiThread(new Runnable() {                            @Override                            public void run() {                                result.setText(re + "");                                clean_data();                            }                        });                        break;                    case "/":                        re = Double.parseDouble(pending_number.getText().toString()) / Double.parseDouble(enter_number.getText().toString());                        runOnUiThread(new Runnable() {                            @Override                            public void run() {                                result.setText(re + "");                                clean_data();                            }                        });                        break;                }            });        }        button1.setOnClickListener(listener);        button2.setOnClickListener(listener);        button3.setOnClickListener(listener);        button4.setOnClickListener(listener);        button5.setOnClickListener(listener);        button6.setOnClickListener(listener);        button7.setOnClickListener(listener);        button8.setOnClickListener(listener);        button9.setOnClickListener(listener);        button0.setOnClickListener(listener);        delete.setOnClickListener(listener);        clean.setOnClickListener(listener);        //  decimal.setOnClickListener(neg_and_decimal);        // NEG.setOnClickListener(neg_and_decimal);        sub.setOnClickListener(operation);        add.setOnClickListener(operation);        divide.setOnClickListener(operation);        mult.setOnClickListener(operation);    }    public void clean_data() {        enter_number.setText("");        pending_number.setText("");        op_textview.setText("");    }}